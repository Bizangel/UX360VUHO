<krpano>
	
	<!--
	CROP IMAGE RECT
	layer[name].crop = 'rect.x|rect.y|rect.w|rect.h'
	-->
	<layer name="overlay_tooltip" keep="true"
	       type="text"
	       parent="OverlayMenu"
	       visible="false" alpha="0"
	       enabled="false"
	       align="rightbottom"
	       edge="bottom"
	       oy="-2"
	       background="false" backgroundcolor="0xFFFFFF" backgroundalpha="1.0"
	       border="false" bordercolor="0x000000" borderalpha="1.0"
	       borderwidth="1.0" roundedge="0"
	       shadow="0.0" shadowrange="4.0" shadowangle="45" shadowcolor="0x000000" shadowalpha="1.0"
	       textshadow="1" textshadowrange="6.0" textshadowangle="90" textshadowcolor="0x000000" textshadowalpha="1.0"
	       css="text-align:center; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:26px;"
	       html="test"
		   hovering="false"
		   x="35%"
		   y="120%"
	       />
		   
	<action name="do_tooltip" scope="local">
		copy(layer[overlay_tooltip].html, caller.tooltip);
	    set(layer[overlay_tooltip].visible, true);
	    tween(layer[overlay_tooltip].alpha, 1.0, 0.5);
	</action>
	
	<action name="do_tooltip_out" scope="local">
		tween(layer[overlay_tooltip].alpha, 0.0, 0.25, default, set(layer[overlay_tooltip].visible,false));
	</action>
	
	<include url="%VIEWER%/plugins/webvr.xml" devices="html5" />
	
	<!-- overwrite some settings from the webvr.xml for functionality -->
	<plugin name="webvr" keep="true" devices="html5.and.webgl"
	        onavailable="set(layer[entervr_icon].url,%ROOT%/icons/vron.png);"/>
			
	<action name="overlay_animation_enable" scope="local">
		<!-- Base size is 384x384 -->
		<!-- Extended Size is 2060, so X should start from 2060 - 384 = 1676 -->
		<!-- CROP IS DONE ON BASE IMAGE THEN > RESIZED SO NO WORRIES FAM -->
		if( layer[OverlayMenu].url == '%ROOT%/icons/menuoff.png',
			set(layer[overlay_close_hitbox].width,18%);
			
			
			set(layer[OverlayMenu].handcursor,false);
			set(layer[OverlayMenu].url,%ROOT%/icons/menuon.png);
			
			set(layer[OverlayMenu].crop,'1676|0|384|384');
			
			setinterval('vuho_overlay_id',0,
				copy(cropval,layer[OverlayMenu].crop);
				
				
				indexoftxt(i,get(cropval),'|');
				calc(copy_x,slice(get(cropval),0,i));
				
				<!-- Adjust Speed -->
				dec(copy_x,200);
				
				calc(copy_width,2060-copy_x);
				
				set(layer[OverlayMenu].crop,calc(copy_x + '|0|' + copy_width + '|384'));
				
				<!-- End check -->
				if(copy_x LE 0,
					clearinterval('vuho_overlay_id');
					set(layer[OverlayMenu].crop,'0|0|2060|384');
					enable_overlay_icons();
					tween(layer[overlay_tooltip].alpha,0);
				);
			);
		);
	</action>
	
	<action name="overlay_animation_disable" scope="local">
		<!-- Base size is 384x384 -->
		if( layer[OverlayMenu].url == '%ROOT%/icons/menuon.png',
			set(layer[overlay_close_hitbox].width,100%);
			
			
			set(layer[OverlayMenu].handcursor,true);
			set(layer[OverlayMenu].crop,'0|0|2060|384');
			
			setinterval('vuho_overlay_id',0,
				copy(cropval,layer[OverlayMenu].crop);
				
				
				indexoftxt(i,get(cropval),'|');
				calc(copy_x,slice(get(cropval),0,i));
				
				<!-- Adjust Speed -->
				inc(copy_x,200);
				
				calc(copy_width,2060-copy_x);
				
				set(layer[OverlayMenu].crop,calc(copy_x + '|0|' + copy_width + '|384'));
				
				<!-- End check -->
				if(copy_x GT 1676,
					clearinterval('vuho_overlay_id');
					set(layer[OverlayMenu].url,%ROOT%/icons/menuoff.png);
					set(layer[OverlayMenu].crop,'0|0|384|384');
					disable_overlay_icons();
					tween(layer[overlay_tooltip].alpha,0);
				);
			);
			
		);
		<!--
		print(layer[OverLayMenu].width);
		-->
	</action>
	
	<action name="enable_overlay_icons" scope="local">
		tween(layer[fullscreen_icon].alpha,1,.1); set(layer[fullscreen_icon].enabled,true);
		tween(layer[entervr_icon].alpha,1,.1); set(layer[entervr_icon].enabled,true);
		tween(layer[material_icon].alpha,1,.1); set(layer[material_icon].enabled,true);
		tween(layer[information_icon].alpha,1,.1); set(layer[information_icon].enabled,true);
	</action>
	
	<action name="disable_overlay_icons" scope="local">
		tween(layer[fullscreen_icon].alpha,0,.1); set(layer[fullscreen_icon].enabled,false);
		tween(layer[entervr_icon].alpha,0,.1); set(layer[entervr_icon].enabled,false);
		tween(layer[material_icon].alpha,0,.1); set(layer[material_icon].enabled,false);
		tween(layer[information_icon].alpha,0,.1); set(layer[information_icon].enabled,false);
		
		if(device.handheld == true,
			extend_overlay_animation_disable_mobile();
			,
			extend_overlay_animation_disable();
		);
	</action>
	
	<action name="toggle_fullscreen_icon" scope="local">
		if( layer[fullscreen_icon].active == true,
			set(layer[fullscreen_icon].url,%ROOT%/icons/fullscreen_off.png);
			set(layer[fullscreen_icon].active,false);
			,
			set(layer[fullscreen_icon].url,%ROOT%/icons/fullscreen_on.png);
			set(layer[fullscreen_icon].active,true);
		);
	</action>

	<action name="toggle_fullscreen_icon_hover_out" scope="local">
		if( layer[fullscreen_icon].active == true,
			set(layer[fullscreen_icon].url,%ROOT%/icons/fullscreen_on.png);
			,
			set(layer[fullscreen_icon].url,%ROOT%/icons/fullscreen_off.png);
		);
	</action>
	
	<action name="toggle_fullscreen_icon_hover_in" scope="local">
		if( layer[fullscreen_icon].active == true,
			set(layer[fullscreen_icon].url,%ROOT%/icons/fullscreen_off.png);
			,
			set(layer[fullscreen_icon].url,%ROOT%/icons/fullscreen_on.png);
			
		);
	</action>
	
	<action name="toggle_overlay" scope="local">
		if( layer[OverlayMenu].url == '%ROOT%/icons/menuon.png',
			overlay_animation_disable();
			,
			overlay_animation_enable();
		);
	</action>
	
	<action name="overlay_mobile_exceptions" scope="local" autorun="onstart">
		if(device.handheld == true,
			set(layer[OverlayMenu].scale,0.15);
			set(layer[information_icon].url,%ROOT%/icons/infoon.png);set(layer[information_icon].scale,0.77);
			set(layer[material_icon].url,%ROOT%/icons/switchmaton.png);
			overlay_animation_enable();
		);
	</action>
	
	<action name="toggle_info" scope="local">
		if(layer[infoslide1].enabled == true OR layer[infoslide2].enabled == true OR layer[infoslide3].enabled == true,
			remove_images();
			,
			force_infodisplay(1);
		);
	</action>
	<!-- Overlay -->
	<layer name="OverlayMenu" keep="true" type="image" url="%ROOT%/icons/menuoff.png" handcursor="true" align="rightbottom" scale="0.3" x="5%" y="5%" scalechildren="true"
	onclick=""
	maskchildren="false">
		<layer name="overlay_close_hitbox" type="container" onclick="toggle_overlay();" align="righttop" x="0%" y="0%" width="100%" height="100%" bgcolor="0x000000" bgalpha="0" bgcapture="true"/>
		
		<layer name="fullscreen_icon" type="image" url="%ROOT%/icons/fullscreen_off.png" align="righttop" x="21%" y="20%" alpha="0" enabled="false" onclick="switch(fullscreen);toggle_fullscreen_icon();" active="false" tooltip="Pantalla Completa"
		onover="toggle_fullscreen_icon_hover_in();do_tooltip();"
		onout="toggle_fullscreen_icon_hover_out();do_tooltip_out();"/>
		
		<layer name="entervr_icon" type="image" url="%ROOT%/icons/vroff.png" align="righttop" x="40%" y="19%" alpha="0" enabled="false" onclick="webvr.enterVR();"
		onover="set(layer[entervr_icon].url,%ROOT%/icons/vron.png);do_tooltip();"
		onout="set(layer[entervr_icon].url,%ROOT%/icons/vroff.png);do_tooltip_out();"
		tooltip="Realidad Virtual"/>
		
		<layer name="information_icon" type="image" url="%ROOT%/icons/infooff.png" align="righttop" x="60%" y ="18%" alpha="0" enabled="false" scale="1"
		onover="set(layer[information_icon].url,%ROOT%/icons/infoon.png);set(layer[information_icon].scale,0.77);do_tooltip();"
		onout="set(layer[information_icon].url,%ROOT%/icons/infooff.png);set(layer[information_icon].scale,1);do_tooltip_out();"
		onclick="toggle_info();"
		tooltip="InformaciÃ³n"/>
		
		<layer name="material_icon" type="image" url="%ROOT%/icons/switchmatoff.png" align="righttop" x="80%" y="18%" alpha="0" scale="0.7" enabled="false"
		onover="set(layer[material_icon].url,%ROOT%/icons/switchmaton.png);do_tooltip();"
		onout="set(layer[material_icon].url,%ROOT%/icons/switchmatoff.png);do_tooltip_out();"
		onclick="toggle_extended_overlay();" devices="desktop"
		tooltip="Cambio Materiales"/>
		
		<layer name="extend_menu" type="image" url="%ROOT%/icons/extendmenu.png" align="righttop" x="91%" y="0" alpha="1" crop="1652|0|0|384" maskchildren="true"
		handcursor="false" devices="desktop">
			
			
			<layer name="floor1ui" type="image" url="%VIEWER%/icons/floor1off.png" x="35%" y="25%" align="righttop" scale="0.32" 
			onclick="switch_floor_ui(1);" enabled="true" alpha="1" devices="desktop"/>
	
			<layer name="floor2ui" type="image" url="%VIEWER%/icons/floor2off.png" x="15%" y="25%" align="righttop" scale="0.32" 
			onclick="switch_floor_ui(2);"  enabled="true" alpha="1" devices="desktop"/>
			
			<layer name="madera1ui" type="image" url="%VIEWER%/icons/madera1off.png" x="+78%" y="25%" align="righttop" scale="0.32" 
			onclick="switch_madera_ui(1);" enabled="true" alpha="1" devices="desktop"/>
	
			<layer name="madera2ui" type="image" url="%VIEWER%/icons/madera2off.png" x="+57%" y="25%" align="righttop" scale="0.32" 
			onclick="switch_madera_ui(2);"  enabled="true" alpha="1" devices="desktop"/>
			
			
			
		</layer>
		
		<!-- Mobile Version -->
		<layer name="material_icon" type="image" url="%ROOT%/icons/switchmatoff.png" align="righttop" x="80%" y="18%" alpha="0" scale="0.7" enabled="false"
		onover="set(layer[material_icon].url,%ROOT%/icons/switchmaton.png);"
		onout="set(layer[material_icon].url,%ROOT%/icons/switchmatoff.png);"
		onclick="toggle_extended_overlay_mobile();" devices="handheld"/>
		
		<layer name="extend_menu" type="image" url="%ROOT%/icons/extendmenu_mobile.png" align="righttop" x="0%" y="-500" alpha="1"  maskchildren="true"
		crop="0|657|2058|0"
		handcursor="false" devices="handheld">
			
			
			<layer name="floor1ui" type="image" url="%VIEWER%/icons/floor1off.png" x="30%" y="28%" align="righttop" scale="0.32" 
			onclick="switch_floor_ui(1);" enabled="true" alpha="1" devices="handheld"/>
	
			<layer name="floor2ui" type="image" url="%VIEWER%/icons/floor2off.png" x="15%" y="28%" align="righttop" scale="0.32" 
			onclick="switch_floor_ui(2);"  enabled="true" alpha="1" devices="handheld"/>
			
			<layer name="madera1ui" type="image" url="%VIEWER%/icons/madera1off.png" x="+75%" y="28%" align="righttop" scale="0.32" 
			onclick="switch_madera_ui(1);" enabled="true" alpha="1" devices="handheld"/>
	
			<layer name="madera2ui" type="image" url="%VIEWER%/icons/madera2off.png" x="+55%" y="28%" align="righttop" scale="0.32" 
			onclick="switch_madera_ui(2);"  enabled="true" alpha="1" devices="handheld"/>
			
			
			
		</layer>
	</layer>
	
	<action name="extend_overlay_animation_enable" scope="local">
		<!-- Base size is 384x384 -->
		<!-- Extended Size is 2060, so X should start from 2060 - 384 = 1676 -->
		<!-- CROP IS DONE ON BASE IMAGE THEN > RESIZED SO NO WORRIES FAM -->
		copy(cropval,layer[extend_menu].crop);		
		indexoftxt(i,get(cropval),'|');
		calc(copy_x,slice(get(cropval),0,i));
		
		<!-- if 0 thn means fully extended, if 1652 retracted -->
		if( copy_x == 1652,	
			set(layer[material_icon].url,%ROOT%/icons/switchmaton.png);
			
			
			setinterval('extend_overlay_id',0,
				copy(cropval,layer[extend_menu].crop);
				
				
				indexoftxt(i,get(cropval),'|');
				calc(copy_x,slice(get(cropval),0,i));
				
				<!-- Adjust Speed -->
				dec(copy_x,200);
				
				calc(copy_width,1652-copy_x);
				
				set(layer[extend_menu].crop,calc(copy_x + '|0|' + copy_width + '|384'));
				
				<!-- End check -->
				if(copy_x LE 0,
					clearinterval('extend_overlay_id');
					set(layer[extend_menu].crop,'0|0|1652|384');
				);
			);
		);
	</action>
	
	<action name="extend_overlay_animation_disable" scope="local">
		<!-- Base size is 384x384 -->
		<!-- Extended Size is 2060, so X should start from 2060 - 384 = 1676 -->
		<!-- CROP IS DONE ON BASE IMAGE THEN > RESIZED SO NO WORRIES FAM -->
		copy(cropval,layer[extend_menu].crop);		
		indexoftxt(i,get(cropval),'|');
		calc(copy_x,slice(get(cropval),0,i));
		
		<!-- if 0 thn means fully extended, if 1652 retracted -->
		if( copy_x == 0,	
			set(layer[material_icon].url,%ROOT%/icons/switchmatoff.png);
			
			setinterval('extend_overlay_id',0,
				copy(cropval,layer[extend_menu].crop);
				
				
				indexoftxt(i,get(cropval),'|');
				calc(copy_x,slice(get(cropval),0,i));
				
				<!-- Adjust Speed -->
				inc(copy_x,200);
				
				calc(copy_width,1652-copy_x);
				
				set(layer[extend_menu].crop,calc(copy_x + '|0|' + copy_width + '|384'));
				
				<!-- End check -->
				if(copy_x GE 1652,
					clearinterval('extend_overlay_id');
					set(layer[extend_menu].crop,'1652|0|0|384');
				);
			);
		);
	</action>
	
	<action name="toggle_extended_overlay" scope="local">
		copy(cropval,layer[extend_menu].crop);		
		indexoftxt(i,get(cropval),'|');
		calc(copy_x,slice(get(cropval),0,i));
		
		<!-- if 0 thn means fully extended, if 1652 retracted -->
		if( copy_x == 1652,	
			extend_overlay_animation_enable();
			,
			extend_overlay_animation_disable();
		);
	</action>
	
	<action name="extend_overlay_animation_enable_mobile" scope="local">
		<!-- Base size is 384x384 -->
		<!-- Extended Size is 2060, so X should start from 2060 - 384 = 1676 -->
		<!-- CROP IS DONE ON BASE IMAGE THEN > RESIZED SO NO WORRIES FAM -->
		
		
		copy(cropval,layer[extend_menu].crop);		
		indexoftxt(i,get(cropval),'|');
		calc(cropval,slice(get(cropval),i+1,cropval.length));
		
		indexoftxt(i,get(cropval),'|');
		calc(copy_y,slice(get(cropval),0,i));
		
		<!-- y needs to move between 0% and -500 -->
		if( copy_y == 657,	
			set(layer[material_icon].url,%ROOT%/icons/switchmaton.png);
			
			
			setinterval('extend_overlay_id',0,
				copy(cropval,layer[extend_menu].crop);		
				indexoftxt(i,get(cropval),'|');
				calc(cropval,slice(get(cropval),i+1,cropval.length));
				
				indexoftxt(i,get(cropval),'|');
				calc(copy_y,slice(get(cropval),0,i));
				
				
				dec(copy_y,100);
				
				
				calc(copy_height,657-copy_y);
				set(layer[extend_menu].y,calc(copy_y-500));
				
				set(layer[extend_menu].crop,calc('0|' + copy_y + '|2058|' + copy_height));
				
				
				if(copy_y LE 0,
					clearinterval('extend_overlay_id');
					set(layer[extend_menu].crop,'0|0|2058|657');
					set(layer[extend_menu].y,-500);
				);
			);
		);
		
	</action>
	
	<action name="extend_overlay_animation_disable_mobile" scope="local">
		<!-- Base size is 384x384 -->
		<!-- Extended Size is 2060, so X should start from 2060 - 384 = 1676 -->
		<!-- CROP IS DONE ON BASE IMAGE THEN > RESIZED SO NO WORRIES FAM -->
		
		
		copy(cropval,layer[extend_menu].crop);		
		indexoftxt(i,get(cropval),'|');
		calc(cropval,slice(get(cropval),i+1,cropval.length));
		
		indexoftxt(i,get(cropval),'|');
		calc(copy_y,slice(get(cropval),0,i));
		
		if( copy_y == 0,	
			set(layer[material_icon].url,%ROOT%/icons/switchmaton.png);
			
			
			setinterval('extend_overlay_id',0,
				copy(cropval,layer[extend_menu].crop);		
				indexoftxt(i,get(cropval),'|');
				calc(cropval,slice(get(cropval),i+1,cropval.length));
				
				indexoftxt(i,get(cropval),'|');
				calc(copy_y,slice(get(cropval),0,i));
				
				
				inc(copy_y,100);
				
				
				calc(copy_height,657-copy_y);
				set(layer[extend_menu].y,calc(copy_y-500));
				
				set(layer[extend_menu].crop,calc('0|' + copy_y + '|2058|' + copy_height));
				
				
				if(copy_y GE 657,
					clearinterval('extend_overlay_id');
					set(layer[extend_menu].crop,'0|657|2058|0');
					set(layer[extend_menu].y,0);
				);
			);
		);
		
	</action>
	
	
	<action name="toggle_extended_overlay_mobile" scope="local">
		<!-- Base size is 384x384 -->
		<!-- Extended Size is 2060, so X should start from 2060 - 384 = 1676 -->
		<!-- CROP IS DONE ON BASE IMAGE THEN > RESIZED SO NO WORRIES FAM -->
		
		
		copy(cropval,layer[extend_menu].crop);		
		indexoftxt(i,get(cropval),'|');
		calc(cropval,slice(get(cropval),i+1,cropval.length));
		
		indexoftxt(i,get(cropval),'|');
		calc(copy_y,slice(get(cropval),0,i));
		
		
		if( copy_y == 657,
			extend_overlay_animation_enable_mobile();
			,
			extend_overlay_animation_disable_mobile();
		);
	</action>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- Floor UI -->
	<action name="set_floor_ui" scope="local" args="nfloor, onoff">
		calc(floorname_ui,'floor' + nfloor + 'ui');
		copy(floorname,layer[get(floorname_ui)].url);
		indexoftxt(i,get(floorname),'floor');
		add(i,6);
		calc(floorurlbase,slice(floorname,0,i));
		calc(layer[get(floorname_ui)].url,floorurlbase+onoff+'.png');
	</action>
	
	<action name="set_starting_ui" scope="local" autorun="onstart">
		set_floor_ui(1,on);
		set_madera_ui(1,on);
	</action>
	
	<action name="switch_floor_ui" scope="local" args="nfloor">
		if(nfloor == 1,
			set_floor_ui(1,on); set_floor_ui(2,off);
			change_floor(claro);
		);
		if(nfloor == 2,
			set_floor_ui(2,on); set_floor_ui(1,off);
			change_floor(oscuro);
		);
	</action>
	
	<action name="off_all_floor_ui" scope="local">
		set_floor_ui(1,off); set_floor_ui(2,off);
		set(layer[floor1ui].enabled,false); tween(layer[floor1ui].alpha,0);
		set(layer[floor2ui].enabled,false); tween(layer[floor2ui].alpha,0);
	</action>
	
	<action name="enable_floor_ui" scope="local">
		set(layer[floor1ui].enabled,true); tween(layer[floor1ui].alpha,1);
		set(layer[floor2ui].enabled,true); tween(layer[floor2ui].alpha,1);
	</action>
	
	
	

		
		
	<!-- same but madera UI version use mader to not think about indexes -->
	
	<action name="set_madera_ui" scope="local" args="nfloor, onoff">
		calc(floorname_ui,'madera' + nfloor + 'ui');
		copy(floorname,layer[get(floorname_ui)].url);
		indexoftxt(i,get(floorname),'madera');
		add(i,7);
		calc(floorurlbase,slice(floorname,0,i));
		calc(layer[get(floorname_ui)].url,floorurlbase+onoff+'.png');
	</action>
	
	<action name="switch_madera_ui" scope="local" args="nfloor">
		if(nfloor == 1,
			set_madera_ui(1,on); set_madera_ui(2,off);
			change_mueble(claro);
		);
		if(nfloor == 2,
			set_madera_ui(2,on); set_madera_ui(1,off);
			change_mueble(oscuro);
		);
	</action>
	
	<action name="off_all_madera_ui" scope="local">
		set_madera_ui(1,off); set_madera_ui(2,off);
		set(layer[madera1ui].enabled,false); tween(layer[madera1ui].alpha,0);
		set(layer[madera2ui].enabled,false); tween(layer[madera2ui].alpha,0);
	</action>
	
	<action name="enable_madera_ui" scope="local">
		set(layer[madera1ui].enabled,true); tween(layer[madera1ui].alpha,1);
		set(layer[madera2ui].enabled,true); tween(layer[madera2ui].alpha,1);
	</action>
	
	
	
	
		
	
	
	
</krpano>